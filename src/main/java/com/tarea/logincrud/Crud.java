/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.tarea.logincrud;

import Clases.UsuarioDAO;
import Clases.UsuarioDTO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Coraline
 */
public class Crud extends javax.swing.JFrame {

    /**
     * Creates new form Crud
     */
    UsuarioDAO usuarioDAO = new UsuarioDAO();

    public Crud() {
        initComponents();
        listarUsuarios();
        btnListar.addActionListener(e -> listarUsuarios());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnBorrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        miTabla = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Contraseña: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 70, -1));

        jLabel1.setText("Nombre: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 60, -1));

        txtNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomActionPerformed(evt);
            }
        });
        jPanel1.add(txtNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 110, -1));

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        jPanel1.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 110, -1));

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        jLabel3.setText("ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 60, -1));

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, -1));

        miTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Contraseña"
            }
        ));
        jScrollPane1.setViewportView(miTabla);
        if (miTabla.getColumnModel().getColumnCount() > 0) {
            miTabla.getColumnModel().getColumn(0).setResizable(false);
            miTabla.getColumnModel().getColumn(1).setResizable(false);
            miTabla.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 380, 120));

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        jPanel1.add(btnListar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        if (txtNom.getText().isEmpty() || txtPass.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos");
            return;
        }

        try {
            String nombre = txtNom.getText();
            String pass = txtPass.getText();

            // Aseguramos que el nombre no esté vacío
            if (nombre.isEmpty() || pass.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios");
                return;
            }

            // Creamos el usuario
            UsuarioDTO usuario = new UsuarioDTO(0, nombre, pass); // Asumimos que el ID se genera automáticamente en la BD

            // Verificamos si el usuario ya existe (esto es opcional pero útil)
            if (usuarioDAO.existeUsuario(nombre)) {
                JOptionPane.showMessageDialog(null, "El usuario ya existe");
                return;
            }

            // Intentamos insertar el usuario
            if (usuarioDAO.insertarUsuario(usuario)) {
                JOptionPane.showMessageDialog(null, "Usuario creado correctamente");
                listarUsuarios(); // Actualiza la tabla de usuarios
            } else {
                JOptionPane.showMessageDialog(null, "Error al crear el usuario");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error en la creación: " + ex.getMessage());
        }

        limpiarCampos();
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (txtId.getText().isEmpty() && txtNom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese ID o nombre para actualizar");
            return;
        }

        try {
            int id = txtId.getText().isEmpty() ? -1 : Integer.parseInt(txtId.getText());
            String nombre = txtNom.getText();
            String pass = txtPass.getText();

            if (nombre.isEmpty() || pass.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos");
                return;
            }

            UsuarioDTO usuario = new UsuarioDTO(id, nombre, pass);

            if (usuarioDAO.actualizarUsuarioPorIdONombre(usuario)) {
                JOptionPane.showMessageDialog(null, "Usuario actualizado correctamente");
                listarUsuarios(); // Actualiza la tabla
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario o no se pudo actualizar");
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "ID no válido");
        }

        limpiarCampos();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed

    }//GEN-LAST:event_btnListarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if (txtId.getText().isEmpty() && txtNom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese ID o nombre para eliminar");
            return;
        }

        try {
            int id = txtId.getText().isEmpty() ? -1 : Integer.parseInt(txtId.getText());
            String nombre = txtNom.getText();

            if (usuarioDAO.eliminarUsuarioPorIdONombre(id, nombre)) {
                JOptionPane.showMessageDialog(null, "Usuario eliminado correctamente");
                listarUsuarios(); // Actualiza la tabla
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el usuario o no se pudo eliminar");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ID inválido");
        }

        limpiarCampos();
    }//GEN-LAST:event_btnBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crud().setVisible(true);
            }
        });
    }

    public void listarUsuarios() {
        DefaultTableModel modelo = (DefaultTableModel) miTabla.getModel();
        modelo.setRowCount(0); // limpia la tabla

        UsuarioDAO dao = new UsuarioDAO();
        List<UsuarioDTO> lista = dao.obtenerUsuarios();

        for (UsuarioDTO u : lista) {
            modelo.addRow(new Object[]{u.getId(), u.getNombre(), u.getContraseña()});
        }
    }

    public void limpiarCampos() {
        txtId.setText("");
        txtNom.setText("");
        txtPass.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable miTabla;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtPass;
    // End of variables declaration//GEN-END:variables
}
